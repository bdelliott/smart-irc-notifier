#!/bin/bash
#
# Generate terminal notifications by remotely tailing fnotify log file.
#
# Also update remote idle-time file so that server-irc-notifier knows if it
# should send an email/SMS notification
#
# Inspired by: http://andy.delcambre.com/2008/12/06/growl-notifications-with-irssi.html
#
# Usage: client-irc-notifier <start|stop>

IRC_HOST=irc
NOTIFIER=/Applications/terminal-notifier.app/Contents/MacOS/terminal-notifier


function stop() {
    # Kill any existly irc-notifier commands
    ps -eaf | grep bash.*client-irc-notifier | grep -v grep | grep -v $$ | awk '{ print $2 }' | xargs kill

    # Kill any related local ssh processes
    ps -eaf | grep ssh.*.irssi/fnotify | grep -v grep | grep -v $$ | awk '{ print $2 }' | xargs kill
    ps -eaf | grep ssh.*.irssi/idle-time | grep -v grep | grep -v $$ | awk '{ print $2 }' | xargs kill

    # Kill Python idle-time process which isn't greppable
    if [[ -e /tmp/python-idle-time.pid ]]; then
        kill `cat /tmp/python-idle-time.pid`
        rm '/tmp/python-idle-time.pid'
    fi

    # Kill any remote processes for fnotify
    ssh $IRC_HOST -o PermitLocalCommand=no "ps -eaf | grep fnotify | grep -v grep | awk '{ print \$2 }' | xargs kill 2> /dev/null"
}


function start() {
    [ -e $NOTIFIER ] || exit 1

    stop  # Kill any existing processes before starting

    # Emit terminal-notifier notifications anytime a new line is added to
    # fnotifier file
    (ssh $IRC_HOST -o PermitLocalCommand=no  \
         "tail -n0 -f .irssi/fnotify " | \
       while read message; do                    \
         echo $message | $NOTIFIER -group IRC -title IRC 2>&1 > /dev/null; \
       done)&

    # Update remote server with our current idle time
    #
    # -u means unbuffered output so that any errors will cause `print` to
    # raise an exception and the script to return 1
    #
    # Write pidfile because `python -u` is not greppable when killing
    # processes
    (python -u <<EOF |
import os, sys, time
from Quartz.CoreGraphics import CGEventSourceSecondsSinceLastEventType
pidfile = '/tmp/python-idle-time.pid'
with open(pidfile, 'w') as f:
    f.write(str(os.getpid()))
try:
    while True:
        print CGEventSourceSecondsSinceLastEventType(1, int(4294967295))
        time.sleep(1.0)
finally:
    if os.path.exists(pidfile):
        os.unlink(pidfile)
EOF
ssh $IRC_HOST -o PermitLocalCommand=no 'while read msg; do echo $msg > .irssi/idle-time; done;')&
}

if [[ $1 = start ]]; then
    start
elif [[ $1 = stop ]]; then
    stop
else
    echo "usage: client-irc-notifier <start|stop>"
    exit 1
fi
